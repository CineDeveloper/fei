proc errorWrongCMDLineArg(argument [UInt8])
    attributes
        noInline
    panic("\042".join(argument, "\042 is an unknown command-line argument."))

proc errorCantMakeDirectory(directory [UInt8])
    attributes
        noInline
    panic("Error creating directory \042".join(directory, "\042."))

proc errorWrongDirectory(directory [UInt8])
    attributes
        noInline
    panic("\042".join(directory, " is an invalid directory."))

proc errorCantWriteToFile(file [UInt8])
    attributes
        noInline
    panic("It is not possible to write to the file \042".join(file, "\042."))

proc errorCantLoadFile(file [UInt8])
    attributes
        noInline
    panic("It is not possible to read the file \042".join(file, "\042."))

proc errorNotExpectedToken(have Token, expected [UInt8])
    attributes
        noInline
    if expected == ""
        then panic(have.coordinatesToString().join("\042", have[], "\042 not expected."))
        else panic(have.coordinatesToString().join("Expected \042", expected, "\042 but there is the \042", have[], "\042."))

proc errorNotExpectedCMDArg(have [UInt8], expected [UInt8])
    attributes
        noInline
    if expected == ""
        then panic("\042".join(have, "\042 not expected command line argument."))
        else panic("Expected \042".join(expected, "\042 but there is the \042", have, "\042."))

proc errorNotExpectedEOA()
    attributes
        noInline
    panic("Unexpected end of command line arguments.")

proc errorMissedSection(fileName [UInt8])
    attributes
        noInline
    panic("One of the sections (flags, version, cCompilerOptions) is missing.")

proc errorSourcesNotCompiled()
    attributes
        noInline
    panic("The source code is not compiled.")

proc errorNotExpectedEOL(lastToken Token, expected [UInt8])
    attributes
        noInline
    lastPartOfMessage .= select(expected == "", "Unexpected end of line.\n", " \042" + expected + "\042 was expected but the end of the line was found.")
    unexistedToken := lastToken
    unexistedToken:row += unexistedToken[].getLength()
    panic(unexistedToken.coordinatesToString() + lastPartOfMessage)

proc errorAlreadyExist(name Token, whatExist [UInt8])
    attributes
        noInline
    panic(name.coordinatesToString().join("The ", whatExist, " \042", name[], "\042 already exists."))

proc errorWrongName(name Token, nameOwner [UInt8])
    attributes
        noInline
    panic(name.coordinatesToString().join("Wrong ", nameOwner, " name. (", name[], ")"))

proc errorEnvironmentVariableNotExist(name [UInt8])
    attributes
        noInline
    panic("The environment variable \042".join(name, "\042 was not found."))

proc errorCouldNotOpenDirectory(directory Token)
    attributes
        noInline
    panic(directory.coordinatesToString().join("Could not open the \042", directory[], "\042 directory."))

proc errorExpectSubBlock(file [UInt8], line UInt64)
    attributes
        noInline
    panic("File: \042".join(file, "\042, line: ", line.toString(), ". A sub block was expected."))

proc errorWrongLevel(file [UInt8], line UInt64, expectedLevel UInt64, haveLevel UInt64)
    attributes
        noInline
    panic("File: \042".join(file, "\042, line: ", line.toString(), ". Wrong level. (expected - ", expectedLevel.toString(), ", have - ", haveLevel.toString(), ")"))

proc errorTabNotAllowed(file [UInt8], line UInt64, row UInt64)
    attributes
        noInline
    panic("File: \042".join(file, "\042, line: ", line.toString(), ", row: ", row.toString(), ". The tab character is not allowed to format text."))

proc errorNotExist(name Token, whatNotExist [UInt8])
    attributes
        noInline
    panic(name.coordinatesToString().join("The ", whatNotExist, " \042", name[], "\042 does not exist."))

proc errorNotValidPackage(packageFileName [UInt8])
    attributes
        noInline
    panic("File \042".join(packageFileName, "\042 is not a 'fpkg' package."))

proc errorDeleteDirectory(directoryName [UInt8])
    attributes
        noInline
    panic("It is not possible to delete the \042".join(directoryName, "\042 directory."))

proc errorTwoResourcesOneName(resourceName [UInt8])
    attributes
        noInline
    panic("The resource named \042".join(resourceName, "\042 has two different options."))
